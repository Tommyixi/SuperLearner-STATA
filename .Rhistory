cars <- read.csv("cars.csv")
?regress
?ln
?lm
custom_a = lm(mpg ~ weight + trunk + price, data = cars)
custom_b = lm(mpg ~ weight + trunk + price + weight, data = cars)
custom_d = lm(mpg ~ weight + trunk + price + weight + rep78, data = cars)
custom_c = lm(mpg ~ weight, data = cars)
SL.library <- c(custom_a + custom_b + custom_c + custom_d)
SL.library <- c(custom_a, custom_b, custom_c,  custom_d)
library("SuperLearner")
?superLearner
?SuperLearner
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
custom_a = lm(mpg ~ weight + trunk + price, data = cars)
custom_b = lm(mpg ~ weight + trunk + price + weight, data = cars)
custom_d = lm(mpg ~ weight + trunk + price + weight + rep78, data = cars)
custom_c = lm(mpg ~ weight, data = cars)
# generate Library and run Super Learner
SL.library <- c(custom_a, custom_b, custom_c,  custom_d)
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars, newX = newX, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
test <- SuperLearner(Y = cars$mpg, X = cars$price, newX = newX, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c",  "custom_d")
test <- SuperLearner(Y = cars$mpg, X = cars$price, newX = newX, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
cars <- read.csv("cars.csv")
cars_without_mpg <- cars[ , !(names(cars) %in% c("mpg"))]
View(cars_without_mpg)
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, newX = newX, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
SL.library <- c("custom_a", "custom_b", "custom_c",  "custom_d")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "rep78"))]
SL.library <- c("custom_a", "custom_b", "custom_c",  "custom_d")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
View(cars_without_mpg)
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price"))]
custom_a = lm(mpg ~ weight + trunk + price, data = cars)
custom_b = lm(mpg ~ weight + trunk + price + weight, data = cars)
custom_c = lm(mpg ~ weight, data = cars)
SL.library <- c("custom_a", "custom_b", "custom_c",  "custom_d")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
test
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = TRUE, method = "method.NNLS")
lm(mpg~weight, data = cars)
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight, data=X, family=family)
pred <- predict(fit.glm, newdata=newX, type='response')
fit<- list(object=fit.glm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
SL.library <- c("custom_a", "custom_b", "custom_c")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
test
test$SL.predict
test
test$library.predict
View(test$library.predict)
View(test$SL.predict)
View(cars)
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + length, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
test
View(test$SL.predict)
View(test$library.predict)
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_altered <- read.csv("cars_altered.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
cars_altered_without_mpg <- cars[ , (names(cars_altered) %in% c("weight", "trunk", "price", "length"))]
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_altered <- read.csv("cars_altered.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
cars_altered_without_mpg <- cars[ , (names(cars_altered) %in% c("weight", "trunk", "price", "length"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + length, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, newX = cars_altered_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
test$SL.predict
View(test$SL.predict)
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
test2 <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, newX = cars_altered_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
View(test$SL.predict)
View(test2$SL.predict)
predict(test, newdata = cars_altered_without_mpg)
a <- predict(test, newdata = cars_altered_without_mpg)
a <- predict(test, newdata = cars_altered_without_mpg)
SL.library2 <- c("SL.mean", "SL.glm")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library2,
verbose = FALSE, method = "method.NNLS")
a <- predict(test, newdata = cars_altered_without_mpg)
View(a)
View(a$pred)
View(a$library.predict)
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_altered <- read.csv("cars_altered.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + length, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, method = "method.NNLS")
test
plot(test)
plot(test, package = "ggplot2", constant = qnorm(0.975), sort = TRUE, ...)
plot(test, package = "ggplot2", constant = qnorm(0.975), sort = TRUE)
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "binomial", method = "method.NNLS")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian", method = "method.NNLS")
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_altered <- read.csv("cars_altered.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + length, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian", method = "method.NNLS")
test
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
test
SL.library
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
test
CV.SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
a <- CV.SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
a
a$whichDiscreteSL
a$coef
plot(a)
a$library.predict
a$call
a$whichDiscreteSL
a$discreteSL.predict
a$V
a$method
a$SL.library
a$coef
a$discreteSL.predict
a$whichDiscreteSL
library("SuperLearner")
# Not run:
cars <- read.csv("cars.csv")
cars_altered <- read.csv("cars_altered.csv")
cars_without_mpg <- cars[ , (names(cars) %in% c("weight", "trunk", "price", "length"))]
custom_a<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk + price, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_a')
return(out)
}
custom_b<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + trunk, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_b')
return(out)
}
custom_c<- function(Y, X, newX, family, ...) {
if(family$family=='binomial') {}
if(family$family=='gaussian'){
fit.lm<- lm(Y~ weight + length, data=X, family=family)
pred <- predict(fit.lm, newdata=newX, type='response')
fit<- list(object=fit.lm)
}
out <- list(pred=pred, fit=fit)
class(out$fit) <- c('custom_c')
return(out)
}
# generate Library and run Super Learner
SL.library <- c("custom_a", "custom_b", "custom_c")
SL.library2 <- c("SL.mean", "SL.mean")
test <- SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
a <- CV.SuperLearner(Y = cars$mpg, X = cars_without_mpg, SL.library = SL.library,
verbose = FALSE, family = "gaussian")
summary(a)
